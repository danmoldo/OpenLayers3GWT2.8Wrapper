<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>today.learnjava.ol3</groupId>
    <artifactId>gwt28-ol3</artifactId>
    <version>1.3</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>today.learnjava.ol3</groupId>
  <artifactId>gwt28-ol3-demo</artifactId>
  <packaging>war</packaging>
  <version>1.3</version>
  <name>${project.artifactId}</name>

  <properties>
    <gwt.version>2.8.0-rc3</gwt.version>
    <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <gwt.maven.plugin.version>2.8.0-rc3</gwt.maven.plugin.version>
  </properties>
  
  <dependencies>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>${gwt.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>gwt28-ol3-wrapper</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.gwtbootstrap3</groupId>
      <artifactId>gwtbootstrap3</artifactId>
      <version>0.9.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.gwtbootstrap3</groupId>
      <artifactId>gwtbootstrap3-extras</artifactId>
      <version>0.9.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.googlecode.gwtquery</groupId>
      <artifactId>gwtquery</artifactId>
      <version>1.4.3</version>
    </dependency>
  </dependencies>

  <build>
    <!-- Generate compiled stuff in the folder used for developing mode -->
    <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

    <plugins>

      <!-- GWT Maven Plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>${gwt.maven.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <!--  goal>run-codeserver</goal-->
              <goal>compile</goal>
              <!--<goal>test</goal>-->
              <!--  goal>i18n</goal-->
              <goal>generateAsync</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <module>today.learnjava.ol3.demo</module>
          <runTarget>index.html</runTarget>
          <hostedWebapp>${webappDirectory}</hostedWebapp>
          <!-- Use JSInterop -->
          <!--<jsInteropMode>JS</jsInteropMode>-->
          
          <!--  
          <compilePerFile>true</compilePerFile>
          <superDevMode>true</superDevMode>
          -->
          
        </configuration>
      </plugin>

      <!-- Copy static web files before executing gwt:run -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>exploded</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <webappDirectory>${webappDirectory}</webappDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>gwt-maven-plugin</artifactId>
          <version>${gwt.maven.plugin.version}</version>
          <configuration>
            <style>PRETTY</style>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
